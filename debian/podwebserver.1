.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.32
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Webserver 3"
.TH Webserver 3 "2006-12-20" "perl v5.8.8" "User Contributed Perl Documentation"
.SH "NAME"
Pod::Webserver \-\- minimal web server to serve local Perl documentation
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&  % podwebserver
\&  You can now point your browser at http://localhost:8020/
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module can be run as an application that works as a
minimal web server to serve local Perl documentation.  It's like
perldoc except it works through your browser.
.PP
Run \fIpodwebserver \-h\fR for a list of runtime options.
.ie n .SH "SECURITY (AND @INC)"
.el .SH "SECURITY (AND \f(CW@INC\fP)"
.IX Header "SECURITY (AND @INC)"
Pod::Webserver is not what you'd call a gaping security hole \*(--
after all, all it does and could possibly do is serve \s-1HTML\s0
versions of anything you could get by typing \*(L"perldoc
SomeModuleName\*(R".  Pod::Webserver won't serve files at
arbitrary paths or anything.
.PP
But do consider whether you're revealing anything by 
basically showing off what versions of modules you've got
installed; and also consider whether you could be revealing
any proprietary or in-house module documentation.
.PP
And also consider that this exposes the documentation
of modules (i.e., any Perl files that at all look like
modules) in your \f(CW@INC\fR dirs \*(-- and your \f(CW@INC\fR probably
contains \*(L".\*(R"!  If your current working directory could
contain modules \fIwhose Pod\fR you don't
want anyone to see, then you could do two things:
The cheap and easy way is to just chdir to an
uninteresting directory:
.PP
.Vb 1
\&  mkdir ~/.empty; cd ~/.empty; podwebserver
.Ve
.PP
The more careful approach is to run podwebserver
under perl in \-T (taint) mode (as explained in
perlsec), and to explicitly specify what extra
directories you want in \f(CW@INC\fR, like so:
.PP
.Vb 1
\&  perl \-T \-Isomepath \-Imaybesomeotherpath \-S podwebserver
.Ve
.PP
You can also use the \-I trick (that's a capital \*(L"igh\*(R", 
not a lowercase \*(L"ell\*(R") to add dirs to \f(CW@INC\fR even
if you're not using \-T.  For example:
.PP
.Vb 1
\&  perl \-I/that/thar/Module\-Stuff\-0.12/lib \-S podwebserver
.Ve
.PP
An alternate approach is to use your shell's
environment-setting commands to alter \s-1PERL5LIB\s0 or
\&\s-1PERLLIB\s0 before starting podwebserver.
.PP
These \-T and \-I switches are explained in perlrun. But I'll note in
passing that you'll likely need to do this to get your \s-1PERLLIB\s0
environment variable to be in \f(CW@INC\fR...
.PP
.Vb 1
\&  perl \-T \-I$PERLLIB \-S podwebserver
.Ve
.PP
(Or replacing that with \s-1PERL5LIB\s0, if that's what you use.)
.ie n .Sh "\s-1ON\s0 \s-1INDEXING\s0 '.' \s-1IN\s0 @INC"
.el .Sh "\s-1ON\s0 \s-1INDEXING\s0 '.' \s-1IN\s0 \f(CW@INC\fP"
.IX Subsection "ON INDEXING '.' IN @INC"
Pod::Webserver uses the module Pod::Simple::Search to build the index
page you see at http://yourservername:8020/ (or whatever port you
choose instead of 8020). That module's indexer has one notable \s-1DWIM\s0
feature: it reads over \f(CW@INC\fR, except that it skips the \*(L".\*(R" in \f(CW@INC\fR.  But
you can work around this by expressing the current directory in some
other way than as just the single literal period \*(-- either as some
more roundabout way, like so:
.PP
.Vb 1
\&  perl \-I./. \-S podwebserver
.Ve
.PP
Or by just expressing the current directory absolutely:
.PP
.Vb 1
\&  perl \-I`pwd` \-S podwebserver
.Ve
.PP
Note that even when \*(L".\*(R" isn't indexed, the Pod in files under it are
still accessible \*(-- just as if you'd typed \*(L"perldoc whatever\*(R" and got
the Pod in \fI./whatever.pl\fR
.SH "SEE ALSO"
.IX Header "SEE ALSO"
This module is implemented using many \s-1CPAN\s0 modules,
including: Pod::Simple::HTMLBatch Pod::Simple::HTML
Pod::Simple::Search Pod::Simple
.PP
See also Pod::Perldoc and <http://search.cpan.org/>
.SH "COPYRIGHT AND DISCLAIMERS"
.IX Header "COPYRIGHT AND DISCLAIMERS"
Copyright (c) 2004\-2006 Sean M. Burke.  All rights reserved.
.PP
This library is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.
.PP
This program is distributed in the hope that it will be useful, but
without any warranty; without even the implied warranty of
merchantability or fitness for a particular purpose.
.SH "AUTHOR"
.IX Header "AUTHOR"
Original author: Sean M. Burke \f(CW\*(C`sburke@cpan.org\*(C'\fR
.PP
Maintained by: Allison Randal \f(CW\*(C`allison@perl.org\*(C'\fR
